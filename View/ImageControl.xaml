<UserControl x:Class="FolderThumbnailExplorer.View.ImageControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:loc="clr-namespace:FolderThumbnailExplorer.Localization"
			 xmlns:local="clr-namespace:FolderThumbnailExplorer.View"
			 xmlns:viewmodel="clr-namespace:FolderThumbnailExplorer.ViewModel"
			 d:DataContext="{d:DesignInstance Type=viewmodel:PhotoViewerViewModel}"
			 mc:Ignorable="d"
			 d:DesignHeight="500"
			 d:DesignWidth="25"
			 Loaded="UCLoaded">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/View/GlobalResourceDict.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<StackPanel HorizontalAlignment="Center"
					VerticalAlignment="Center">
			<Button x:Name="ShowInExplorer"
					Width="20"
					Template="{DynamicResource ButtonTemplate1}"
					Background="{x:Null}"
					Foreground="White"
					Content="📁"
					Command="{Binding OpenInExplorerCommand}"
					CommandParameter="{Binding ElementName=ShowInExplorer, Path=ToolTip}"
					Padding="1.6,1,1,1" />
			<Button x:Name="Previous"
					Width="20"
					Template="{DynamicResource ButtonTemplate1}"
					Background="{x:Null}"
					Foreground="White"
					Content="▲"
					Click="PreviousClick"
					Margin="0,5" />
			<!--The "FocusVisualStyle="{x:Null}"" line makes it not showing the focus visual (the black dot border) unaffecting Focusable-->
			<Slider x:Name="ImgPosition"
					Style="{DynamicResource SliderStyle1}"
					Foreground="DodgerBlue"
					FocusVisualStyle="{x:Null}"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					SmallChange="1"
					Cursor="ScrollNS"
					Maximum="{Binding ImageCount}"
					Value="{Binding ListSelectedIndex, Mode=TwoWay}"
					Width="25"
					Height="{Binding ElementName=ImgPosition, Path=Maximum, Converter={StaticResource SLConverter}, Mode=OneWay}"
					MaxHeight="420"
					IsDirectionReversed="True"
					IsSnapToTickEnabled="True"
					Orientation="Vertical"
					TickPlacement="BottomRight"
					IsMoveToPointEnabled="True" />
			<Button x:Name="Next"
					Width="20"
					Template="{DynamicResource ButtonTemplate1}"
					Background="{x:Null}"
					Foreground="White"
					Content="▼"
					Click="NextClick"
					Margin="0,5" />
			<Label Content="..."
				   Padding="0"
				   Foreground="WhiteSmoke"
				   FontSize="22"
				   MouseEnter="Label_MouseEnter"
				   MouseLeave="Label_MouseLeave"
				   HorizontalContentAlignment="Center"
				   VerticalContentAlignment="Center"
				   Margin="0,-15,0,0"
				   Panel.ZIndex="-1" />
		</StackPanel>
		<Popup Name="SettingsPopup"
			   AllowsTransparency="True"
			   MouseLeave="SettingsPopup_MouseLeave">
			<Border BorderBrush="Gray"
					BorderThickness="2">
				<StackPanel MinHeight="100"
							Background="#CC000000">
					<Label Content="{x:Static loc:Loc.PVPopUpSettingsTitle}"
						   Foreground="AntiqueWhite"
						   FontWeight="Medium"
						   Padding="4,2,2,3" />
					<Separator Margin="-1,0,0,0" />
					<!--#region Slideshow-->
					<DockPanel>
						<StackPanel Orientation="Horizontal">
							<Label Content="{x:Static loc:Loc.PVPopUpSettingsSlideshowInterval}"
								   Foreground="White" />
							<TextBox Name="SlideInterval"
									 Text="{Binding SlideInterval, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
									 VerticalContentAlignment="Center"
									 HorizontalContentAlignment="Center"
									 MouseWheel="SlideInterval_MouseWheel"
									 Height="20"
									 MinWidth="20">
								<TextBox.Style>
									<Style TargetType="{x:Type TextBox}">
										<Setter Property="Background"
												Value="Transparent" />
										<Setter Property="Foreground"
												Value="WhiteSmoke" />
										<Setter Property="CaretBrush"
												Value="Azure" />
										<Style.Triggers>
											<Trigger Property="Validation.HasError"
													 Value="True">
												<Setter Property="BorderBrush"
														Value="Red" />
												<Setter	Property="ToolTip"
														Value="{x:Static loc:Loc.PVPopUpSettingsSlideshowValueError}" />
											</Trigger>
											<Trigger Property="Validation.HasError"
													 Value="False">
												<Setter Property="ToolTip"
														Value="{x:Static loc:Loc.PVPopUpSettingsSlideshowValue}" />
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>
							<Label Content="ms."
								   Foreground="White" />
						</StackPanel>
						<ToggleButton DockPanel.Dock="Right"
									  HorizontalAlignment="Right"
									  Height="16"
									  Width="32"
									  Margin="5"
									  Focusable="False"
									  IsChecked="{Binding SlideShow}"
									  Style="{DynamicResource ToggleButtonTemplateStyle}" />
					</DockPanel>
					<!--#endregion-->
					<!--#region Always on top-->
					<DockPanel>
						<Label Content="{x:Static loc:Loc.PVPopUpSettingsAOT}"
							   Foreground="White" />
						<ToggleButton DockPanel.Dock="Right"
									  HorizontalAlignment="Right"
									  Height="16"
									  Width="32"
									  Margin="5"
									  Focusable="False"
									  Checked="AOTBtn_Changed"
									  Unchecked="AOTBtn_Changed"
									  Style="{DynamicResource ToggleButtonTemplateStyle}" />
					</DockPanel>
					<!--#endregion-->
					<!--#region Twin Page-->
					<DockPanel>
						<Label Content="{x:Static loc:Loc.PVPopUpSettingsTwin}"
							   Foreground="White" />
						<ToggleButton DockPanel.Dock="Right"
									  HorizontalAlignment="Right"
									  Height="16"
									  Width="32"
									  Margin="5"
									  Focusable="False"
									  IsChecked="{Binding UseTwinPage}"
									  Style="{DynamicResource ToggleButtonTemplateStyle}" />
					</DockPanel>
					<DockPanel Margin="8,-8,0,0">
						<Label Content="{x:Static loc:Loc.PVPopUpSettingsTwinRightToLeft}"
							   ToolTip="{x:Static loc:Loc.PVPopUpSettingsTwinRightToLeftTT}"
							   Foreground="White" />
						<ToggleButton DockPanel.Dock="Right"
									  HorizontalAlignment="Right"
									  Height="16"
									  Width="32"
									  Margin="5"
									  Focusable="False"
									  Command="{Binding ChangeFlowDirectionCommand}"
									  CommandParameter="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsChecked}"
									  Style="{DynamicResource ToggleButtonTemplateStyle}" />
					</DockPanel>
					<DockPanel Margin="8,-8,0,0">
						<Label Content="{x:Static loc:Loc.PVPopUpSettingsTwinDoubleTurn}"
							   ToolTip="{x:Static loc:Loc.PVPopUpSettingsTwinDoubleTurnTT}"
							   Foreground="White" />
						<ToggleButton DockPanel.Dock="Right"
									  HorizontalAlignment="Right"
									  Height="16"
									  Width="32"
									  Margin="5"
									  Focusable="False"
									  IsChecked="{Binding DoubleTurn}"
									  Style="{DynamicResource ToggleButtonTemplateStyle}" />
					</DockPanel>
					<!--#endregion-->
				</StackPanel>
			</Border>
		</Popup>
	</Grid>
</UserControl>
