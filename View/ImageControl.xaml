<UserControl x:Class="FolderThumbnailExplorer.View.ImageControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:loc="clr-namespace:FolderThumbnailExplorer.Localization"
			 xmlns:local="clr-namespace:FolderThumbnailExplorer.View"
			 xmlns:converter="clr-namespace:FolderThumbnailExplorer.Converter"
			 xmlns:viewmodel="clr-namespace:FolderThumbnailExplorer.ViewModel"
			 d:DataContext="{d:DesignInstance Type=viewmodel:PhotoViewerViewModel}"
			 mc:Ignorable="d"
			 d:DesignHeight="500"
			 d:DesignWidth="25"
			 Loaded="UCLoaded">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/View/GlobalResourceDict.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<StackPanel HorizontalAlignment="Center"
					VerticalAlignment="Center">
			<Button x:Name="ShowInExplorer"
					Width="20"
					Template="{DynamicResource ButtonTemplate1}"
					Background="{x:Null}"
					Foreground="White"
					Content="📁"
					Command="{Binding OpenInExplorerCommand}"
					CommandParameter="{Binding ElementName=ShowInExplorer, Path=ToolTip}"
					Padding="1.6,1,1,1" />
			<Button x:Name="Previous"
					Width="20"
					Template="{DynamicResource ButtonTemplate1}"
					Background="{x:Null}"
					Foreground="White"
					Content="▲"
					Click="PreviousClick"
					Margin="0,5" />
			<!--The "FocusVisualStyle="{x:Null}"" line makes it not showing the focus visual (the black dot border) unaffecting Focusable-->
			<Slider x:Name="ImgPosition"
					Style="{DynamicResource SliderStyle1}"
					Foreground="DodgerBlue"
					FocusVisualStyle="{x:Null}"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					SmallChange="1"
					Cursor="ScrollNS"
					Maximum="{Binding ImageCount}"
					Value="{Binding ListSelectedIndex, Mode=TwoWay}"
					Width="25"
					Height="{Binding ElementName=ImgPosition, Path=Maximum, Converter={StaticResource SLConverter}, Mode=OneWay}"
					MaxHeight="420"
					IsDirectionReversed="True"
					IsSnapToTickEnabled="True"
					Orientation="Vertical"
					TickPlacement="BottomRight"
					IsMoveToPointEnabled="True" />
			<Button x:Name="Next"
					Width="20"
					Template="{DynamicResource ButtonTemplate1}"
					Background="{x:Null}"
					Foreground="White"
					Content="▼"
					Click="NextClick"
					Margin="0,5" />
			<Label Content="..."
				   Padding="0"
				   Foreground="WhiteSmoke"
				   FontSize="22"
				   MouseEnter="Label_MouseEnter"
				   MouseLeave="Label_MouseLeave"
				   HorizontalContentAlignment="Center"
				   VerticalContentAlignment="Center"
				   Margin="0,-15,0,0"
				   Panel.ZIndex="-1" />
		</StackPanel>
		<Popup Name="SettingsPopup"
			   AllowsTransparency="True"
			   IsOpen="True"
			   MouseLeave="SettingsPopup_MouseLeave">
			<Border BorderBrush="Gray"
					BorderThickness="2">
				<StackPanel Height="100"
							Width="200"
							Background="#CC000000">
					<Label Content="{x:Static loc:Loc.PVPopUpSettingsTitle}"
						   Foreground="AntiqueWhite"
						   FontWeight="Medium"
						   Padding="4,2,2,3" />
					<Separator Margin="-1,0,0,0" />
					<StackPanel Orientation="Horizontal">
						<Label Content="{x:Static loc:Loc.PVPopUpSettingsSlideshowInterval}"
							   Foreground="White"/>
						<TextBox Style="{DynamicResource UniTextBoxStyle}"
								 VerticalContentAlignment="Center"
								 HorizontalContentAlignment="Center"
								 Text="1"
								 Height="20" />
						<Label Content="s."
							   Foreground="White" />
						<Button Template="{DynamicResource ButtonTemplate1}"
								BorderBrush="Transparent"
								Background="Transparent"
								Focusable="False"
								Content="⏯"
								FontSize="14"
								Padding="0"
								Width="25"
								Height="25"
								Command="{Binding ToggleSlideShowCommand}">
							<Button.Style>
								<Style TargetType="{x:Type Button}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=DataContext.SlideShow, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
													 Value="True">
											<Setter Property="Button.Foreground"
													Value="Lime" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Path=DataContext.SlideShow, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
													 Value="False">
											<Setter Property="Button.Foreground"
													Value="DarkSlateGray" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Button.Style>
						</Button>
					</StackPanel>
				</StackPanel>
			</Border>
		</Popup>
	</Grid>
</UserControl>
