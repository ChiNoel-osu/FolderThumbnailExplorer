<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:converter="clr-namespace:FolderThumbnailExplorer.Converter"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
	<!--#region ButtonTemplate1-->
	<SolidColorBrush x:Key="Button.MouseOver.Background"
					 Color="HotPink" />
	<SolidColorBrush x:Key="Button.MouseOver.Border"
					 Color="#FF3C7FB1" />
	<SolidColorBrush x:Key="Button.Pressed.Background"
					 Color="Pink" />
	<SolidColorBrush x:Key="Button.Pressed.Border"
					 Color="#FF2C628B" />
	<SolidColorBrush x:Key="Button.Disabled.Background"
					 Color="Black" />
	<SolidColorBrush x:Key="Button.Disabled.Border"
					 Color="Orange" />
	<SolidColorBrush x:Key="Button.Disabled.Foreground"
					 Color="#FF838383" />
	<ControlTemplate x:Key="ButtonTemplate1"
					 TargetType="{x:Type ButtonBase}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="true">
			<ContentPresenter x:Name="contentPresenter"
							  Focusable="False"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  Margin="{TemplateBinding Padding}"
							  RecognizesAccessKey="True"
							  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Button.IsDefaulted"
					 Value="true">
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
			</Trigger>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Background"
						TargetName="border"
						Value="{StaticResource Button.MouseOver.Background}" />
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{StaticResource Button.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="true">
				<Setter Property="Background"
						TargetName="border"
						Value="{StaticResource Button.Pressed.Background}" />
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{StaticResource Button.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Background"
						TargetName="border"
						Value="{StaticResource Button.Disabled.Background}" />
				<Setter Property="BorderBrush"
						TargetName="border"
						Value="{StaticResource Button.Disabled.Border}" />
				<Setter Property="TextElement.Foreground"
						TargetName="contentPresenter"
						Value="{StaticResource Button.Disabled.Foreground}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--#endregion-->
	<!--#region ComboBoxTemplate1-->
	<SolidColorBrush x:Key="ComboBox.Static.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Static.Border"
					 Color="#FFACACAC" />
	<SolidColorBrush x:Key="ComboBox.Static.Glyph"
					 Color="#FF606060" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
					 Color="#FFABADB3" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Border"
					 Color="#FF7EB4EA" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
					 Color="Indigo" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
					 Color="#FF7EB4EA" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
					 Color="#FF7EB4EA" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Border"
					 Color="#FF569DE5" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
					 Color="Red" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
					 Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
					 Color="#FF569DE5" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
					 Color="#FF569DE5" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Background"
					 Color="#FFF0F0F0" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Border"
					 Color="#FFD9D9D9" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
					 Color="#FFBFBFBF" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
					 Color="#FFFFFFFF" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
					 Color="#FFBFBFBF" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
					 Color="Transparent" />
	<Style x:Key="ComboBoxToggleButton"
		   TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Focusable"
				Value="false" />
		<Setter Property="ClickMode"
				Value="Press" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="templateRoot"
							Background="{StaticResource ComboBox.Static.Background}"
							BorderBrush="{StaticResource ComboBox.Static.Border}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
						<Border x:Name="splitBorder"
								BorderBrush="Transparent"
								BorderThickness="1"
								HorizontalAlignment="Right"
								Margin="0"
								SnapsToDevicePixels="true"
								Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path x:Name="arrow"
								  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
								  Fill="{StaticResource ComboBox.Static.Glyph}"
								  HorizontalAlignment="Center"
								  Margin="0"
								  VerticalAlignment="Center" />
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="true" />
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
										   Value="false" />
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
										   Value="false" />
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Static.Editable.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Static.Editable.Border}" />
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{StaticResource ComboBox.MouseOver.Glyph}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
										   Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.MouseOver.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.MouseOver.Border}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
										   Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
						</MultiDataTrigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{StaticResource ComboBox.Pressed.Glyph}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
										   Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Pressed.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Pressed.Border}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
										   Value="true" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{StaticResource ComboBox.Disabled.Glyph}" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
										   Value="false" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Disabled.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Disabled.Border}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
										   Value="false" />
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ComboBoxTemplate1"
					 TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot"
			  SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
								  Width="0" />
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup"
				   AllowsTransparency="true"
				   Grid.ColumnSpan="2"
				   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
				   Margin="1"
				   Placement="Bottom"
				   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<theme:SystemDropShadowChrome x:Name="shadow"
											  Color="Transparent"
											  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
											  MaxHeight="{TemplateBinding MaxDropDownHeight}">
					<Border x:Name="dropDownBorder"
							Background="Transparent"
							BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
							BorderThickness="1">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid"
								  RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas"
										HorizontalAlignment="Left"
										Height="0"
										VerticalAlignment="Top"
										Width="0">
									<Rectangle x:Name="opaqueRect"
											   Fill="{Binding Background, ElementName=dropDownBorder}"
											   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
											   Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter"
												KeyboardNavigation.DirectionalNavigation="Contained"
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</Border>
				</theme:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Grid.ColumnSpan="2"
						  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
						  Style="{StaticResource ComboBoxToggleButton}" />
			<ContentPresenter x:Name="contentPresenter"
							  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
							  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							  Content="{TemplateBinding SelectionBoxItem}"
							  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  IsHitTestVisible="false"
							  Margin="{TemplateBinding Padding}"
							  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow"
					 SourceName="PART_Popup"
					 Value="true">
				<Setter Property="Margin"
						TargetName="shadow"
						Value="0,0,5,5" />
				<Setter Property="Color"
						TargetName="shadow"
						Value="#71000000" />
			</Trigger>
			<Trigger Property="HasItems"
					 Value="false">
				<Setter Property="Height"
						TargetName="dropDownBorder"
						Value="95" />
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping"
							   Value="true" />
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
							   Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll"
						Value="false" />
			</MultiTrigger>
			<Trigger Property="ScrollViewer.CanContentScroll"
					 SourceName="DropDownScrollViewer"
					 Value="false">
				<Setter Property="Canvas.Top"
						TargetName="opaqueRect"
						Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
				<Setter Property="Canvas.Left"
						TargetName="opaqueRect"
						Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!--#endregion-->
	<!--#region UniTextBoxStyle-->
	<Style TargetType="{x:Type TextBox}"
		   x:Key="UniTextBoxStyle">
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="CaretBrush"
				Value="LightGray" />
	</Style>
	<!--#endregion-->
	<!--#region SliderStype1-->
	<Style x:Key="RepeatButtonTransparent"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Focusable"
				Value="false" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
							   Height="{TemplateBinding Height}"
							   Width="{TemplateBinding Width}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="SliderThumb.Static.Background"
					 Color="DodgerBlue" />
	<SolidColorBrush x:Key="SliderThumb.Static.Border"
					 Color="LightBlue" />
	<SolidColorBrush x:Key="SliderThumb.Static.Foreground"
					 Color="#FFE5E5E5" />
	<SolidColorBrush x:Key="SliderThumb.MouseOver.Background"
					 Color="#FFDCECFC" />
	<SolidColorBrush x:Key="SliderThumb.MouseOver.Border"
					 Color="#FF7Eb4EA" />
	<SolidColorBrush x:Key="SliderThumb.Pressed.Background"
					 Color="CadetBlue" />
	<SolidColorBrush x:Key="SliderThumb.Pressed.Border"
					 Color="#FF569DE5" />
	<SolidColorBrush x:Key="SliderThumb.Disabled.Background"
					 Color="#FFF0F0F0" />
	<SolidColorBrush x:Key="SliderThumb.Disabled.Border"
					 Color="#FFD9D9D9" />
	<SolidColorBrush x:Key="SliderThumb.Track.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="SliderThumb.Track.Border"
					 Color="Blue" />
	<ControlTemplate x:Key="SliderThumbHorizontalDefault"
					 TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  UseLayoutRounding="False"
			  VerticalAlignment="Center">
			<Path x:Name="grip"
				  Fill="{StaticResource SliderThumb.Static.Background}"
				  Stroke="{StaticResource SliderThumb.Static.Border}"
				  SnapsToDevicePixels="False"
				  Stretch="Fill"
				  StrokeThickness="2"
				  UseLayoutRounding="False"
				  VerticalAlignment="Center">
				<Path.Data>
					<RectangleGeometry RadiusX="10"
									   RadiusY="2"
									   Rect="10,10 10 10" />
				</Path.Data>
			</Path>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsDragging"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontalTop"
					 TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  UseLayoutRounding="True"
			  VerticalAlignment="Center">
			<Path x:Name="grip"
				  Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
				  Fill="{StaticResource SliderThumb.Static.Background}"
				  Stroke="{StaticResource SliderThumb.Static.Border}"
				  SnapsToDevicePixels="True"
				  Stretch="Fill"
				  StrokeThickness="1"
				  UseLayoutRounding="True"
				  VerticalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsDragging"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbHorizontalBottom"
					 TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  UseLayoutRounding="True"
			  VerticalAlignment="Center">
			<Path x:Name="grip"
				  Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
				  Fill="{StaticResource SliderThumb.Static.Background}"
				  Stroke="{StaticResource SliderThumb.Static.Border}"
				  SnapsToDevicePixels="True"
				  Stretch="Fill"
				  StrokeThickness="1"
				  UseLayoutRounding="True"
				  VerticalAlignment="Center" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsDragging"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderHorizontal"
					 TargetType="{x:Type Slider}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto"
								   MinHeight="{TemplateBinding MinHeight}" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<TickBar x:Name="TopTick"
						 Fill="{TemplateBinding Foreground}"
						 Height="4"
						 Margin="0,0,0,2"
						 Placement="Top"
						 Grid.Row="0"
						 Visibility="Collapsed" />
				<TickBar x:Name="BottomTick"
						 Fill="{TemplateBinding Foreground}"
						 Height="4"
						 Margin="0,2,0,0"
						 Placement="Bottom"
						 Grid.Row="2"
						 Visibility="Collapsed" />
				<Border x:Name="TrackBackground"
						Background="{StaticResource SliderThumb.Track.Background}"
						BorderBrush="{StaticResource SliderThumb.Track.Border}"
						BorderThickness="1"
						Height="4.0"
						Margin="5,0"
						Grid.Row="1"
						VerticalAlignment="center">
					<Canvas Margin="-6,-1">
						<Rectangle x:Name="PART_SelectionRange"
								   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
								   Height="4.0"
								   Visibility="Hidden" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track"
					   Grid.Row="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}"
									  Style="{StaticResource RepeatButtonTransparent}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}"
									  Style="{StaticResource RepeatButtonTransparent}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb"
							   Focusable="False"
							   Height="18"
							   OverridesDefaultStyle="True"
							   Template="{StaticResource SliderThumbHorizontalDefault}"
							   VerticalAlignment="Center"
							   Width="11" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement"
					 Value="TopLeft">
				<Setter Property="Visibility"
						TargetName="TopTick"
						Value="Visible" />
				<Setter Property="Template"
						TargetName="Thumb"
						Value="{StaticResource SliderThumbHorizontalTop}" />
				<Setter Property="Margin"
						TargetName="TrackBackground"
						Value="5,2,5,0" />
			</Trigger>
			<Trigger Property="TickPlacement"
					 Value="BottomRight">
				<Setter Property="Visibility"
						TargetName="BottomTick"
						Value="Visible" />
				<Setter Property="Template"
						TargetName="Thumb"
						Value="{StaticResource SliderThumbHorizontalBottom}" />
				<Setter Property="Margin"
						TargetName="TrackBackground"
						Value="5,0,5,2" />
			</Trigger>
			<Trigger Property="TickPlacement"
					 Value="Both">
				<Setter Property="Visibility"
						TargetName="TopTick"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="BottomTick"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled"
					 Value="true">
				<Setter Property="Visibility"
						TargetName="PART_SelectionRange"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Setter Property="Foreground"
						TargetName="Thumb"
						Value="Blue" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalDefault"
					 TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  UseLayoutRounding="True"
			  VerticalAlignment="Center">
			<Path x:Name="grip"
				  Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
				  Fill="{StaticResource SliderThumb.Static.Background}"
				  Stroke="{StaticResource SliderThumb.Static.Border}"
				  Stretch="Fill" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsDragging"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalLeft"
					 TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  UseLayoutRounding="True"
			  VerticalAlignment="Center">
			<Path x:Name="grip"
				  Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
				  Fill="{StaticResource SliderThumb.Static.Background}"
				  Stroke="{StaticResource SliderThumb.Static.Border}"
				  Stretch="Fill" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsDragging"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderThumbVerticalRight"
					 TargetType="{x:Type Thumb}">
		<Grid HorizontalAlignment="Center"
			  UseLayoutRounding="True"
			  VerticalAlignment="Center">
			<Path x:Name="grip"
				  Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
				  Fill="{StaticResource SliderThumb.Static.Background}"
				  Stroke="{StaticResource SliderThumb.Static.Border}"
				  StrokeThickness="2.5"
				  Stretch="Fill" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.MouseOver.Border}" />
			</Trigger>
			<Trigger Property="IsDragging"
					 Value="true">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Pressed.Border}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="false">
				<Setter Property="Fill"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Background}" />
				<Setter Property="Stroke"
						TargetName="grip"
						Value="{StaticResource SliderThumb.Disabled.Border}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="SliderVertical"
					 TargetType="{x:Type Slider}">
		<Border x:Name="border"
				Background="{TemplateBinding Background}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}"
				SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition MinWidth="{TemplateBinding MinWidth}"
									  Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TickBar x:Name="TopTick"
						 Grid.Column="0"
						 Fill="{TemplateBinding Foreground}"
						 Margin="0,0,2,0"
						 Placement="Left"
						 Visibility="Collapsed"
						 Width="4" />
				<TickBar x:Name="BottomTick"
						 Grid.Column="2"
						 Fill="{TemplateBinding Foreground}"
						 Margin="2,0,0,0"
						 Placement="Right"
						 Visibility="Collapsed"
						 Width="4" />
				<Border x:Name="TrackBackground"
						Background="{StaticResource SliderThumb.Track.Background}"
						BorderBrush="{StaticResource SliderThumb.Track.Border}"
						BorderThickness="1"
						Grid.Column="1"
						HorizontalAlignment="center"
						Margin="0,5"
						Width="4.0">
					<Canvas Margin="-1,-6">
						<Rectangle x:Name="PART_SelectionRange"
								   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
								   Visibility="Hidden"
								   Width="4.0" />
					</Canvas>
				</Border>
				<Track x:Name="PART_Track"
					   Grid.Column="1">
					<Track.DecreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.DecreaseLarge}"
									  Style="{StaticResource RepeatButtonTransparent}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<RepeatButton Command="{x:Static Slider.IncreaseLarge}"
									  Style="{StaticResource RepeatButtonTransparent}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb x:Name="Thumb"
							   Focusable="False"
							   Height="11"
							   OverridesDefaultStyle="True"
							   Template="{StaticResource SliderThumbVerticalDefault}"
							   VerticalAlignment="Top"
							   Width="18" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement"
					 Value="TopLeft">
				<Setter Property="Visibility"
						TargetName="TopTick"
						Value="Visible" />
				<Setter Property="Template"
						TargetName="Thumb"
						Value="{StaticResource SliderThumbVerticalLeft}" />
				<Setter Property="Margin"
						TargetName="TrackBackground"
						Value="2,5,0,5" />
			</Trigger>
			<Trigger Property="TickPlacement"
					 Value="BottomRight">
				<Setter Property="Visibility"
						TargetName="BottomTick"
						Value="Visible" />
				<Setter Property="Template"
						TargetName="Thumb"
						Value="{StaticResource SliderThumbVerticalRight}" />
				<Setter Property="Margin"
						TargetName="TrackBackground"
						Value="0,5,2,5" />
			</Trigger>
			<Trigger Property="TickPlacement"
					 Value="Both">
				<Setter Property="Visibility"
						TargetName="TopTick"
						Value="Visible" />
				<Setter Property="Visibility"
						TargetName="BottomTick"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsSelectionRangeEnabled"
					 Value="true">
				<Setter Property="Visibility"
						TargetName="PART_SelectionRange"
						Value="Visible" />
			</Trigger>
			<Trigger Property="IsKeyboardFocused"
					 Value="true">
				<Setter Property="Foreground"
						TargetName="Thumb"
						Value="Blue" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="SliderStyle1"
		   TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderBrush"
				Value="Transparent" />
		<Setter Property="Foreground"
				Value="{StaticResource SliderThumb.Static.Foreground}" />
		<Setter Property="Template"
				Value="{StaticResource SliderHorizontal}" />
		<Style.Triggers>
			<Trigger Property="Orientation"
					 Value="Vertical">
				<Setter Property="Template"
						Value="{StaticResource SliderVertical}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->
	<!--#region ScrollBarStyle-->
	<SolidColorBrush x:Key="ScrollBar.Static.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Static.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Static.Glyph"
					 Color="AliceBlue" />
	<SolidColorBrush x:Key="ScrollBar.Static.Thumb"
					 Color="DarkGray" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph"
					 Color="MediumPurple" />
	<SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb"
					 Color="Gray" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Background"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Thumb"
					 Color="#606060" />
	<SolidColorBrush x:Key="ScrollBar.Pressed.Glyph"
					 Color="Black" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Background"
					 Color="#F0F0F0" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Border"
					 Color="Transparent" />
	<SolidColorBrush x:Key="ScrollBar.Disabled.Glyph"
					 Color="Red" />
	<Style x:Key="ScrollBarRepeatButtonTransparent"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="Focusable"
				Value="false" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}"
							   Height="{TemplateBinding Height}"
							   Width="{TemplateBinding Width}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarButton"
		   TargetType="{x:Type RepeatButton}">
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="Padding"
				Value="1" />
		<Setter Property="Focusable"
				Value="false" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border x:Name="border"
							Background="Transparent"
							BorderBrush="{StaticResource ScrollBar.Static.Border}"
							BorderThickness="1"
							SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter"
										  Focusable="False"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource ScrollBar.MouseOver.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource ScrollBar.MouseOver.Border}" />
						</Trigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource ScrollBar.Pressed.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource ScrollBar.Pressed.Border}" />
						</Trigger>
						<!--<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Opacity"
									TargetName="contentPresenter"
									Value="0.56" />
							<Setter Property="Background"
									TargetName="border"
									Value="{StaticResource ScrollBar.Disabled.Background}" />
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{StaticResource ScrollBar.Disabled.Border}" />
						</Trigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbVertical"
		   TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
							   Fill="{StaticResource ScrollBar.Static.Thumb}"
							   Height="{TemplateBinding Height}"
							   SnapsToDevicePixels="True"
							   Width="{TemplateBinding Width}"
							   RadiusX="8"
							   RadiusY="10" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
						</Trigger>
						<Trigger Property="IsDragging"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.Pressed.Thumb}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumbHorizontal"
		   TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
				Value="true" />
		<Setter Property="IsTabStop"
				Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Rectangle x:Name="rectangle"
							   Fill="{StaticResource ScrollBar.Static.Thumb}"
							   Height="{TemplateBinding Height}"
							   SnapsToDevicePixels="True"
							   Width="{TemplateBinding Width}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
						</Trigger>
						<Trigger Property="IsDragging"
								 Value="true">
							<Setter Property="Fill"
									TargetName="rectangle"
									Value="{StaticResource ScrollBar.Pressed.Thumb}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsPressAndHoldEnabled"
				Value="false" />
		<Setter Property="Stylus.IsFlicksEnabled"
				Value="false" />
		<Setter Property="Background"
				Value="{StaticResource ScrollBar.Static.Background}" />
		<Setter Property="BorderBrush"
				Value="{StaticResource ScrollBar.Static.Border}" />
		<Setter Property="Foreground"
				Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness"
				Value="1,0" />
		<Setter Property="Width"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
		<Setter Property="MinWidth"
				Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="Bg"
						  SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
							<RowDefinition Height="0.00001*" />
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
						</Grid.RowDefinitions>
						<Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Grid.Row="1" />
						<RepeatButton x:Name="PART_LineUpButton"
									  Command="{x:Static ScrollBar.LineUpCommand}"
									  IsEnabled="{TemplateBinding IsMouseOver}"
									  Style="{StaticResource ScrollBarButton}">
							<Path x:Name="ArrowTop"
								  Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
								  Fill="{StaticResource ScrollBar.Static.Glyph}"
								  Margin="3,4,3,3"
								  Stretch="Uniform" />
						</RepeatButton>
						<Track x:Name="PART_Track"
							   IsDirectionReversed="true"
							   IsEnabled="{TemplateBinding IsMouseOver}"
							   Grid.Row="1">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
											  Style="{StaticResource ScrollBarRepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
											  Style="{StaticResource ScrollBarRepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
						<RepeatButton x:Name="PART_LineDownButton"
									  Command="{x:Static ScrollBar.LineDownCommand}"
									  IsEnabled="{TemplateBinding IsMouseOver}"
									  Grid.Row="2"
									  Style="{StaticResource ScrollBarButton}">
							<Path x:Name="ArrowBottom"
								  Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
								  Fill="{StaticResource ScrollBar.Static.Glyph}"
								  Margin="3,4,3,3"
								  Stretch="Uniform" />
						</RepeatButton>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowBottom"
									Value="{StaticResource ScrollBar.Pressed.Glyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
										   Value="true" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowTop"
									Value="{StaticResource ScrollBar.Pressed.Glyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowBottom"
									Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}"
										   Value="true" />
								<Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}"
										   Value="false" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Fill"
									TargetName="ArrowTop"
									Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
						</MultiDataTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Fill"
									TargetName="ArrowTop"
									Value="{StaticResource ScrollBar.Disabled.Glyph}" />
							<Setter Property="Fill"
									TargetName="ArrowBottom"
									Value="{StaticResource ScrollBar.Disabled.Glyph}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation"
					 Value="Horizontal">
				<Setter Property="Width"
						Value="Auto" />
				<Setter Property="MinWidth"
						Value="0" />
				<Setter Property="Height"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
				<Setter Property="MinHeight"
						Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
				<Setter Property="BorderThickness"
						Value="0,1" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid x:Name="Bg"
								  SnapsToDevicePixels="true">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
									<ColumnDefinition Width="0.00001*" />
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
								</Grid.ColumnDefinitions>
								<Border Background="{TemplateBinding Background}"
										BorderBrush="{TemplateBinding BorderBrush}"
										BorderThickness="{TemplateBinding BorderThickness}"
										Grid.Column="1" />
								<RepeatButton x:Name="PART_LineLeftButton"
											  Command="{x:Static ScrollBar.LineLeftCommand}"
											  IsEnabled="{TemplateBinding IsMouseOver}"
											  Style="{StaticResource ScrollBarButton}">
									<Path x:Name="ArrowLeft"
										  Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
										  Fill="{StaticResource ScrollBar.Static.Glyph}"
										  Margin="3"
										  Stretch="Uniform" />
								</RepeatButton>
								<Track x:Name="PART_Track"
									   Grid.Column="1"
									   IsEnabled="{TemplateBinding IsMouseOver}">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
													  Style="{StaticResource ScrollBarRepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
													  Style="{StaticResource ScrollBarRepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
								<RepeatButton x:Name="PART_LineRightButton"
											  Command="{x:Static ScrollBar.LineRightCommand}"
											  Grid.Column="2"
											  IsEnabled="{TemplateBinding IsMouseOver}"
											  Style="{StaticResource ScrollBarButton}">
									<Path x:Name="ArrowRight"
										  Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
										  Fill="{StaticResource ScrollBar.Static.Glyph}"
										  Margin="3"
										  Stretch="Uniform" />
								</RepeatButton>
							</Grid>
							<ControlTemplate.Triggers>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
												   Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowRight"
											Value="{StaticResource ScrollBar.Pressed.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
												   Value="true" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowLeft"
											Value="{StaticResource ScrollBar.Pressed.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
												   Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowRight"
											Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
								</MultiDataTrigger>
								<MultiDataTrigger>
									<MultiDataTrigger.Conditions>
										<Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
												   Value="true" />
										<Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
												   Value="false" />
									</MultiDataTrigger.Conditions>
									<Setter Property="Fill"
											TargetName="ArrowLeft"
											Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
								</MultiDataTrigger>
								<Trigger Property="IsEnabled"
										 Value="false">
									<Setter Property="Fill"
											TargetName="ArrowLeft"
											Value="{StaticResource ScrollBar.Disabled.Glyph}" />
									<Setter Property="Fill"
											TargetName="ArrowRight"
											Value="{StaticResource ScrollBar.Disabled.Glyph}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!--#endregion-->
	<converter:LabelSizeConverter x:Key="LSConverter" />
	<converter:SliderLengthConverter x:Key="SLConverter" />
	<converter:Bool2VisivilityConverter x:Key="B2VConverter" />
</ResourceDictionary>